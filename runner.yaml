name : e2etests-runner
parent: dbosoft/winsrv2022-standard/starter
hostname: E2ERUNNER
cpu:
  count: 4
memory:
  startup: 32768
capabilities:
- name: nested_virtualization
- name: dynamic_memory
  details: ['disabled']
- name: secure_boot
  details: ['disabled']
drives: 
- name: sda
  size: 100
variables:
- name: tenantId
  required: true
- name: clientId
  required: true
- name: clientSecret
  secret: true
  required: true
- name: devopsUrls
  required: true
- name: poolName
  required: true
- name: agentName
  required: true
- name: agentPassword
  secret: true
  required: true

fodder:
- name: remove-defender
  type: shellscript
  fileName: Remove-Defender.ps1
  content: |
    #ps1_sysnative
    Uninstall-WindowsFeature Windows-Defender
- name: enable-drv-test-signing
  type: shellscript
  fileName: Enable-TestSigning.ps1
  content: |
    #ps1_sysnative
    bcdedit /set testsigning on
- source: gene:dbosoft/hyperv:install
- name: install-pwsh
  type: shellscript
  fileName: Install-Pwsh.ps1
  content: |
    #ps1_sysnative
    $ErrorActionPreference = 'Stop'
    Set-StrictMode -Version 3.0
    $global:ProgressPreference = 'SilentlyContinue'
    Invoke-WebRequest -Uri 'https://github.com/PowerShell/PowerShell/releases/download/v7.4.7/PowerShell-7.4.7-win-x64.msi' -OutFile C:\PowerShell-7.4.7-win-x64.msi -UseBasicParsing
    msiexec.exe /package C:\PowerShell-7.4.7-win-x64.msi /quiet REGISTER_MANIFEST=1 ADD_PATH=1
    if ($LASTEXITCODE -ne 0) {
      throw "msiexec.exe failed with exit code $LASTEXITCODE"
    }
- name: azure-agent
  filename: azure_agent.ps1
  content: |
    #ps1_sysnative
    $ErrorActionPreference = 'Stop'
    Set-StrictMode -Version 3.0
    $global:ProgressPreference = 'SilentlyContinue'

    if ([System.Net.ServicePointManager]::SecurityProtocol -ne 0) {
      [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
    }

    $version = '{{ agentVersion }}'
    if ($version -eq 'latest') {
        $releaseInfo = Invoke-RestMethod https://api.github.com/repos/Microsoft/azure-pipelines-agent/releases/latest -UseBasicParsing
        $version = $releaseInfo.tag_name -replace '^v', ''
    }

    Invoke-WebRequest -Uri "https://download.agent.dev.azure.com/agent/$version/vsts-agent-win-x64-$version.zip" -OutFile C:\vsts-agent.zip -UseBasicParsing

    Expand-Archive -Path C:\vsts-agent.zip -DestinationPath C:\a
    Remove-Item -Path C:\vsts-agent.zip
    Set-Location C:\a
    .\config.cmd --unattended --url '{{ devopsUrls }}' --auth SP --clientId '{{ clientId }}' --tenantId '{{ tenantId }}' --clientSecret '{{ clientSecret }}'  --pool '{{ poolName }}' --agent '{{ agentName }}' --acceptTeeEula --replace --runAsService --windowsLogonAccount vsts-agent --windowsLogonPassword '{{ agentPassword }}'
    if ($LASTEXITCODE -ne 0) {
        throw "config.cmd failed with exit code $LASTEXITCODE"
    }
  variables:
  - name: agentVersion
    value: latest
  - name: clientSecret
    value: '{{ clientSecret }}'
  - name: clientId
    value: '{{ clientId }}'
  - name: tenantId
    value: '{{ tenantId }}'
  - name: agentPassword
    value: '{{ agentPassword }}'
  - name: devopsUrls
    value: '{{ devopsUrls }}'
  - name: poolName
    value: '{{ poolName }}'
  - name: agentName
    value: '{{ agentName }}'
